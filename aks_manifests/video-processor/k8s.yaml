apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-processor
  namespace: media
  labels:
    app: video-processor
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 25%
  minReadySeconds: 30
  selector:
    matchLabels:
      service: video-processor
  template:
    metadata:
      labels:
        app: video-processor
        service: video-processor
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      priorityClassName: media-highest-priority-linux
      #------------------------------------------------------
      # setting pod DNS policies to enable faster DNS resolution
      # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
      dnsConfig:
        options:
          # use FQDN everywhere 
          # any cluster local access from pods need full CNAME to resolve 
          # short names will not resolve to internal cluster domains
          - name: ndots
            value: "2"
          # dns resolver timeout and attempts
          - name: timeout
            value: "15"
          - name: attempts
            value: "3"
          # use TCP to resolve DNS instad of using UDP (UDP is lossy and pods need to wait for timeout for lost packets)
          - name: use-vc
          # open new socket for retrying
          - name: single-request-reopen
      #------------------------------------------------------
      volumes:
        # # `name` here must match the name
        # # specified in the volume mount
        # - name: demo-configmap-video-processor-volume
        #   configMap:
        #     # `name` here must match the name
        #     # specified in the ConfigMap's YAML
        #     name: demo-configmap
        - name: media-data-volume
          persistentVolumeClaim:
            claimName: media-azurefile-video-processor # PersistentVolumeClaim name in aks_manifests\prerequisites\k8s.yaml
      terminationGracePeriodSeconds: 90 # This must be set to a value that is greater than the preStop hook wait time.
      containers:
        - name: video-processor
          lifecycle:
            preStop:
              exec:
                command: ["sleep","60"]
          image: chdemosharedacr.azurecr.io/media/chmediaservice:1.1
          imagePullPolicy: Always
          volumeMounts:
            # - mountPath: /etc/config
            #   name: demo-configmap-video-processor-volume
            - mountPath: /media/data
              name: media-data-volume
          env:
            - name: MEDIA_PATH
              value: /media/data
          resources:
                limits:
                  memory: 4Gi # the memory limit equals to the request!
                  # no cpu limit! this is excluded on purpose
                requests:
                  memory: 4Gi
                  cpu: "2"

---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: video-processor-scaled-object
  namespace: media
  # annotations:
  #   scaledobject.keda.sh/transfer-hpa-ownership: "true"      # Optional. Use to transfer an existing HPA ownership to this ScaledObject
  #   autoscaling.keda.sh/paused-replicas: "0"                # Optional. Use to pause autoscaling of objects
  #   autoscaling.keda.sh/paused: "true"                      # Optional. Use to pause autoscaling of objects explicitly
spec:
  scaleTargetRef:
    apiVersion: apps/v1        # Optional. Default: apps/v1
    kind: Deployment           # Optional. Default: Deployment
    name: video-processor      # Mandatory. Must be in the same namespace as the ScaledObject
    # envSourceContainerName: {container-name}                # Optional. Default: .spec.template.spec.containers[0]
  pollingInterval:  5                                      # Optional. Default: 30 seconds
  #cooldownPeriod: 300                                     # Optional. Default: 300 seconds ( Applies only if scaling to 0. We are not doing that)
  #idleReplicaCount: 0                                       # Optional. Default: ignored, must be less than minReplicaCount. Need to ignore running one replica always  https://github.com/kedacore/keda/issues/2314 
  minReplicaCount: 1                                       # Optional. Default: 0
  maxReplicaCount: 10                                     # Optional. Default: 100
  fallback:                                                 # Optional. Section to specify fallback options
    failureThreshold: 3                                     # Mandatory if fallback section is included
    replicas: 3                                             # Mandatory if fallback section is included
  advanced:                                                 # Optional. Section to specify advanced options
    restoreToOriginalReplicaCount: true               # Optional. Default: false
    horizontalPodAutoscalerConfig:                          # Optional. Section to specify HPA related options
      name: video-processor-hpa                        # Optional. Default: keda-hpa-{scaled-object-name}
      behavior:                                             # Optional. Use to modify HPA's scaling behavior
        scaleDown:
          stabilizationWindowSeconds: 120
          policies:
          - type: Percent
            value: 50
            periodSeconds: 60
  triggers:
    - type: azure-queue
      metadata:
        queueName: demovideoqueue
        queueLength: '1'
        # activationQueueLength: '50'
      authenticationRef:
        name: video-processor-queue-storage-auth