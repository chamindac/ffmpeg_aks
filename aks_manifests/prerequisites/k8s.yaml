apiVersion: v1
kind: Namespace
metadata:
  name: media


---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: media-azurefile  
provisioner: file.csi.azure.com
reclaimPolicy: Delete
allowVolumeExpansion: true
mountOptions:
 - dir_mode=0777
 - file_mode=0777
 - uid=0
 - gid=0
 - mfsymlinks
 - cache=strict
 - actimeo=30
parameters:
  skuName: Premium_LRS

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-azurefile-video-processor
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: media-azurefile
  resources:
    requests:
      storage: 100Gi

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: media-system-highest-priority-linux
value: 10000000
globalDefault: true
description: "This priority class is used for highest priority media system services which are essential."

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: media-highest-priority-linux
value: 1000000
globalDefault: false
description: "This priority class should be used for highest priority media service pods (linux) only."

# ---
# apiVersion: scheduling.k8s.io/v1
# kind: PriorityClass
# metadata:
#   name: media-medium-priority-linux
# value: 100000
# globalDefault: false
# description: "This priority class should be used for medium priority media service pods (linux) only. Will be default priority for pods with no priority class set."

# ---
# apiVersion: scheduling.k8s.io/v1
# kind: PriorityClass
# metadata:
#   name: media-lowest-priority-linux
# value: 10000
# globalDefault: false
# description: "This priority class should be used for lowest priority media service pods (linux) only."

# Resource quota allocation for each priority class
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: media-highest-priority-linux
  namespace: media
spec:
  hard:
    requests.cpu: "42"
    limits.memory: 100Gi
  scopeSelector:
    matchExpressions:
    - operator : In
      scopeName: PriorityClass
      values: ["media-highest-priority-linux"]


# ---
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: media-medium-priority-linux
#   namespace: media
# spec:
#   hard:
#     requests.cpu: "5"
#     limits.memory: 20Gi
#   scopeSelector:
#     matchExpressions:
#     - operator : In
#       scopeName: PriorityClass
#       values: ["media-medium-priority-linux"]

# ---
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: media-lowest-priority-linux
#   namespace: media
# spec:
#   hard:
#     requests.cpu: "2"
#     limits.memory: 8Gi
#   scopeSelector:
#     matchExpressions:
#     - operator : In
#       scopeName: PriorityClass
#       values: ["media-lowest-priority-linux"]


# ---
# # HPA for dynamicstorage-videoprocessor
# apiVersion: autoscaling/v2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: dynamicstorage-videoprocessor-hpa
#   namespace: media
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: dynamicstorage-videoprocessor
#   maxReplicas: 10
#   minReplicas: 1
#   behavior:
#     scaleDown:
#       stabilizationWindowSeconds: 120
#       policies:
#       - type: Percent
#         value: 50
#         periodSeconds: 60
#     scaleUp:
#       stabilizationWindowSeconds: 15
#       policies:
#       - type: Percent
#         value: 60
#         periodSeconds: 30
#   metrics:
#   - type: Resource
#     resource:
#       name: cpu
#       target:
#         type: Utilization
#         averageUtilization: 70
#   - type: Resource
#     resource:
#       name: memory
#       target:
#         type: Utilization
#         averageUtilization: 70

# KEDA ffmpeg storage queue authentication

# using secret fro now. Test with config map later
---
apiVersion: v1
kind: Secret
metadata:
  name: video-processor-queue-storage-connection
  namespace: media
data:
  connection-string: storageconnectionbase64value

# ---
# apiVersion: keda.sh/v1alpha1
# kind: TriggerAuthentication
# metadata:
#   name: {trigger-authentication-name}
#   namespace: media
# spec:



# secretTargetRef:  
#   - key: {secret-key-name}
#     parameter: {scaledObject-parameter-name} # this is defined in the scale object for Azurestorage queue this is connection (https://keda.sh/docs/2.12/scalers/azure-storage-queue/ connection OR authenticationRef that defines connection)
#     name: {secret-name}     
    