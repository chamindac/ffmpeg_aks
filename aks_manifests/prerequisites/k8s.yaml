apiVersion: v1
kind: Namespace
metadata:
  name: media

---
# Config map enabling access to KV and App Config Service
apiVersion: v1
kind: ConfigMap
metadata:
  name: media-configmap
  namespace: media
data:
  config_dev-euw-001.json: |
    {
      "AppConfigEndpoint": "https://ch-video-dev-euw-001-appconfig-ac.azconfig.io",
      "AppConfigLabel": "ch-video-dev-euw-001-rg-blue",
      "SharedAppConfiglabel": "ch-video-dev-euw-001-rg",
      "KeyVaultName": "ch-video-dev-euw-001-kv",
      "AadTenantId": "efbad420-a8aa-4fcc-9e95-1d06435672d9",
    }
---
apiVersion: v1
kind: Namespace
metadata:
  name: keda

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: media-azurefile  
provisioner: file.csi.azure.com
reclaimPolicy: Delete
allowVolumeExpansion: true
mountOptions:
 - dir_mode=0777
 - file_mode=0777
 - uid=0
 - gid=0
 - mfsymlinks
 - cache=strict
 - actimeo=30
parameters:
  skuName: Premium_LRS

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-azurefile-video-processor
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: media-azurefile
  resources:
    requests:
      storage: 100Gi

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: media-system-highest-priority-linux
value: 10000000
globalDefault: true
description: "This priority class is used for highest priority media system services which are essential."

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: media-highest-priority-linux
value: 1000000
globalDefault: false
description: "This priority class should be used for highest priority media service pods (linux) only."

# ---
# apiVersion: scheduling.k8s.io/v1
# kind: PriorityClass
# metadata:
#   name: media-medium-priority-linux
# value: 100000
# globalDefault: false
# description: "This priority class should be used for medium priority media service pods (linux) only. Will be default priority for pods with no priority class set."

# ---
# apiVersion: scheduling.k8s.io/v1
# kind: PriorityClass
# metadata:
#   name: media-lowest-priority-linux
# value: 10000
# globalDefault: false
# description: "This priority class should be used for lowest priority media service pods (linux) only."

# Resource quota allocation for each priority class
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: media-highest-priority-linux
  namespace: media
spec:
  hard:
    requests.cpu: "42"
    limits.memory: 100Gi
  scopeSelector:
    matchExpressions:
    - operator : In
      scopeName: PriorityClass
      values: ["media-highest-priority-linux"]


# ---
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: media-medium-priority-linux
#   namespace: media
# spec:
#   hard:
#     requests.cpu: "5"
#     limits.memory: 20Gi
#   scopeSelector:
#     matchExpressions:
#     - operator : In
#       scopeName: PriorityClass
#       values: ["media-medium-priority-linux"]

# ---
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: media-lowest-priority-linux
#   namespace: media
# spec:
#   hard:
#     requests.cpu: "2"
#     limits.memory: 8Gi
#   scopeSelector:
#     matchExpressions:
#     - operator : In
#       scopeName: PriorityClass
#       values: ["media-lowest-priority-linux"]


# ---
# # HPA for video-processor
# apiVersion: autoscaling/v2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: video-processor-hpa
#   namespace: media
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: video-processor
#   maxReplicas: 10
#   minReplicas: 1
#   behavior:
#     scaleDown:
#       stabilizationWindowSeconds: 120
#       policies:
#       - type: Percent
#         value: 50
#         periodSeconds: 60
#     scaleUp:
#       stabilizationWindowSeconds: 15
#       policies:
#       - type: Percent
#         value: 60
#         periodSeconds: 30
#   metrics:
#   - type: Resource
#     resource:
#       name: cpu
#       target:
#         type: Utilization
#         averageUtilization: 70
#   - type: Resource
#     resource:
#       name: memory
#       target:
#         type: Utilization
#         averageUtilization: 70


# Service account for AKS workload identity
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: ${sys_aks_uai_client_id}$ # ${sys_aks_uai_client_id}$
    azure.workload.identity/tenant-id: ${tenantid}$ # "${tenantid}$"
  name: ch-video-wi-sa # Referred by AKS user assigned identity federated credential
  namespace: media

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: ${sys_aks_uai_client_id}$ # ${sys_aks_uai_client_id}$
    azure.workload.identity/tenant-id: ${tenantid}$ # "${tenantid}$"
  name: keda-operator # Referred by AKS user assigned identity federated credential
  namespace: keda

---
# HPA for video-processor-eh
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: video-processor-eh-hpa
  namespace: media
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: video-processor-eh
  maxReplicas: 10
  minReplicas: 2
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 15
      policies:
      - type: Percent
        value: 60
        periodSeconds: 30
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70